@page "/fetchproduct"
@inject HttpClient Http

<h1>Get products</h1>

<p>This component demonstrates fetching data from the server.</p>

@if (products == null || products.Count == 0)
{
    <p><em>Loading...</em></p>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>ID</th>
                <th>Name</th>
                <th>Description</th>
                <th>Quantity</th>
                <th>Price ($)</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var product in products)
            {
                <tr>
                    <td>@product.id</td>
                    <td>@product.name</td>
                    <td>@product.desc</td>
                    <td>@product.quantity</td>
                    <td>@product.price.ToString("C")</td>
                </tr>
            }
        </tbody>
    </table>
}

@code {
    private List<Product> products = new List<Product>();

    protected override async Task OnInitializedAsync()
    {
        try
        {
            for (int i = 0; i < 5; i++)
            {
                var product = await Http.GetFromJsonAsync<Product>("/api/ProductGet") ?? new Product { };
                products.Add(product);
            }
        }
        catch (Exception ex)
        {
            Console.WriteLine(ex.ToString());
        }
    }
}
